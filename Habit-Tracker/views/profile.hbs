{{!-- <div class="profile-top-section container-fluid"> --}}
    {{!-- <div class="col-sm-6 profileimg"> --}}
    <img src="{{profilePic}}" class="img-thumbnail" alt="profile photo">
     <figcaption class="figure-caption">
        <a href="/profile/edit">Edit profile</a></figcaption>
        {{!-- <a href="#">No Friends</a> --}}
    </div>
    {{!-- replace image with {{profilephoto}}, once user model is updated --}}

    <h1>Welcome, {{username}}!</h1>
</div>
<section id="overview" class="container-fluid mt-5">
    <h2>Overview</h2>
<div>   
  <canvas id="myChart"></canvas>
</div>

</section>
<section id="habits" class="container-fluid mt-5">
    <h2>Habits</h2>
{{!-- for each item in the array habbits (from data), create a display of the habit name and the done button --}}

{{#each habits}}
<form action="/habits/{{_id}}" method="POST">
  <div class="mb-3">
   <h3>{{this.title}}</h3>
  </div>
{{#if checked}}
<button type="submit" disabled="true" class="btn btn-disabled" onclick="style.display = 'none'">Done!</button>
{{else}}
  <button type="submit" class="btn btn-primary" onclick="style.display = 'none'">Done!</button>
  {{/if}}
</form>
{{!-- Table to display current week progress (bootstrap) --}}

<table class="table caption-top w-50 weekly-progress">
  <caption>Current week progress</caption>
  <thead>
    <tr>
      <th scope="col-.5">M</th>
      <th scope="col-.5">T</th>
      <th scope="col-1">W</th>
      <th scope="col-1">T</th>
      <th scope="col-1">F</th>
      <th scope="col-1">S</th>
      <th scope="col-1">S</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      {{#each this.tableArray}}
      {{#if this}}
      <td><div class="circle fill-circle"></div></td>
      {{else}}
      <td><div class="circle"></div></td>
      {{/if}}
      {{/each}}
    </tr>
  </tbody>
</table>

{{/each}}
</section>

<section id="groups" class="container-fluid mt-5">
    <h2>Groups</h2>

</section>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  const ctx = document.getElementById('myChart');

 // const user = require("../routes/user.routes")
  //console.log(user.arrayTest)

  new Chart(ctx, {
    type: 'polarArea',
    data: {
      labels: [
      'Orange', 'Yellow', 'Green', 'Blue', 'Indigo'],
      datasets: [{
        label: '# of Votes',
        data: [7, 4, 3, 5, 2],
        borderWidth: 1,
        backgroundColor: [
      'rgba(255, 99, 122, 0.5)',
      'rgb(255, 160, 30, 0.5)',
      'rgb(255, 235, 106, 0.7)',
      'rgb(74, 207, 145, 0.5)',
      'rgb(54, 162, 235, 0.5)',
      'rgb(22, 32, 168, 0.5)',
      'rgb(104, 48, 156, 0.5)'
      ]
      }]
    },
    options: {
      scales: {
        y: {
          beginAtZero: true
        }
      }
    }
  });
</script>